ARG base_image
FROM ${base_image}

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get -y update && \
    apt-get -y install gcc g++ make patch git && \
    apt-get -y install libbz2-dev liblzma-dev libssl-dev libreadline-dev libffi-dev && \
    apt-get -y install python && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Install pyenv requirements.
# https://github.com/pyenv/pyenv/wiki/Common-build-problems#requirements
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get -y update && \
    apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
    libncursesw5-dev xz-utils tk-dev && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Install Python.
ARG python_versions
ARG cython_version
ARG fastrlock_version
RUN git clone https://github.com/pyenv/pyenv.git /opt/pyenv
ENV PYENV_ROOT=/opt/pyenv
ENV PATH ${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}
COPY setup_python.sh /
RUN /setup_python.sh "${python_versions}" "${cython_version}" "${fastrlock_version}"

# Install additional libraries for CUDA.
COPY cuda_lib/ /cuda_lib
COPY setup_cuda_opt_lib.py /
RUN /setup_cuda_opt_lib.py --src /cuda_lib --dst /usr/local/cuda

# Install additional dependicies.
ARG system_packages
RUN [ -z "${system_packages}" ] || ( \
        export DEBIAN_FRONTEND=noninteractive && \
        apt-get -y update && \
        apt-get -y install ${system_packages} && \
        rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* \
    )

# Add build agent.
COPY build-wrapper-jetson /build-wrapper
COPY agent.py /

ENTRYPOINT ["/agent.py"]
